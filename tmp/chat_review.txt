Given the provided `PostController.php` and `web.php`, I'll refine the previous suggestions to better align with your current setup. Here are some adjustments and improvements for your Blade view and controller methods:

### Refined Blade View (`create.blade.php`):

```blade
<x-layout>
    <div class="container" id="main-container">
        <div class="row" id="row-a1">
            <div class="col-12 col-12-a1">
                <div class="card card--welcome">
                    <div class="card-body">
                        <div class="card-header">
                            <h3>
                                @if (isset($post))
                                    Editar
                                @else
                                    Crear
                                @endif publicación
                            </h3>
                        </div>
                        <p class="card-text">
                            @if (isset($post))
                                Desde acá podés editar la publicación.
                            @else
                                Desde acá podés agregar nuevas publicaciones a la portada de la web.
                            @endif
                        </p>
                        <form class="form-crud" method="POST"
                              action="{{ isset($post) ? route('post.update', $post->id) : route('post.store') }}"
                              enctype="multipart/form-data">

                            @csrf
                            @if (isset($post))
                                @method('PUT')
                            @endif

                            <div class="col-12">
                                <label for="title">Título</label>
                                <input type="text" class="form-control form-control__input" name="title"
                                       id="title" placeholder="Título de la publicación"
                                       value="{{ old('title', $post->title ?? '') }}" required>
                            </div>
                            <div class="col-6">
                                <label for="type">Tipo de post</label>
                                <select class="form-select form-select__type" name="type" id="type"
                                        aria-label="Seleccionar tipo de publicación">
                                    <option value="1" {{ (isset($post) && $post->type == 1) ? 'selected' : '' }}>Estándar</option>
                                    <option value="2" {{ (isset($post) && $post->type == 2) ? 'selected' : '' }}>Tarjeta</option>
                                </select>
                            </div>
                            <div class="col-12">
                                <label for="description">Descripción</label>
                                <textarea class="form-control form-control__textarea" name="description" id="description"
                                          placeholder="Descripción de la publicación" required>{{ old('description', $post->description ?? '') }}</textarea>
                                <p class="fade-txt">Sólo visible para el equipo.</p>
                            </div>
                            <div class="col-12">
                                <label for="content">Contenido</label>
                                <textarea class="form-control form-control__textarea form-control__textarea--content" name="content" id="content"
                                          placeholder="Contenido de la publicación" required>{{ old('content', $post->content ?? '') }}</textarea>
                            </div>
                            <div class="col-6 input-group">
                                <label for="photo">Imágen</label>
                                @if (isset($post) && $post->photo)
                                    <img src="{{ url("./storage/img/$post->photo") }}" id="form-crud__img--edit" alt="Imagen de la publicación">
                                @endif
                                <input type="file" class="form-control form-control__photo" accept="image/*"
                                       name="photo" id="photo">
                                <p class="fade-txt">Recomendable: El ancho de la imagen mayor al alto.</p>
                            </div>
                            <div class="row row--double">
                                <div class="col-5">
                                    <label for="btn">Texto del botón</label>
                                    <input type="text" class="form-control form-control__input" name="btn"
                                           id="btn" value="{{ old('btn', $post->btn ?? 'Ingresar') }}" required>
                                </div>
                                <div class="col-5">
                                    <label for="post_order">Orden del post</label>
                                    <select class="form-select form-select__order" name="post_order" id="order-select" required>
                                        <option value="top" {{ (isset($post) && $post->post_order == 'top') ? 'selected' : '' }}>Arriba</option>
                                        <option value="bottom" {{ (isset($post) && $post->post_order == 'bottom') ? 'selected' : '' }}>Abajo</option>
                                    </select>
                                </div>
                            </div>

                            @if ($errors->any())
                                <ul class="error-box">
                                    @foreach ($errors->all() as $error)
                                        <li class="error-item">{{ $error }}</li>
                                    @endforeach
                                </ul>
                            @endif
                            <input type="hidden" name="id" value="{{ $post->id ?? '' }}"/>
                            <div class="control-group control-group--btn"><button class="btn-standard">Publicar</button></div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-layout>
```

### Adjusted Controller (`PostController.php`):

#### Store Method:
- Ensure the `post_order` logic is correctly handled for 'top' and 'bottom' positions.
- Properly save and update timestamps.

```php
public function store(Request $request)
{
    $request->validate([
        'title' => 'required|string|max:40',
        'description' => 'string|nullable',
        'content' => 'required|string|min:4',
        'post_order' => 'required',
        'btn' => 'string|nullable',
        'photo' => ['required', RulesFile::image()->min(10)->max(8192)],
    ]);

    // Save the image
    $photoPath = $request->file('photo')->store('', 'img');

    // Determine post order
    if ($request->post_order == 'top') {
        $max_post_order = Post::max('post_order');
        $new_post_order = $max_post_order + 1;
    } else {
        $min_post_order = Post::min('post_order');
        $new_post_order = $min_post_order - 1;
    }

    // Save the post
    $post = new Post;
    $post->type = $request->type;
    $post->title = $request->title;
    $post->description = $request->description;
    $post->content = $request->content;
    $post->photo = $photoPath;
    $post->btn = $request->btn;
    $post->post_order = $new_post_order;
    $post->created_at = Carbon::now();
    $post->updated_at = Carbon::now();
    $post->save();

    return redirect()->route('team')->with('success', 'Publicación creada exitosamente');
}
```

#### Update Method:
- Ensure the update method is correctly saving the changes.

```php
public function update(Request $request, Post $post)
{
    $request->validate([
        'title' => 'required|string|max:40',
        'description' => 'string|nullable',
        'content' => 'required|string|min:4',
        'post_order' => 'required',
        'btn' => 'string|nullable',
        'photo' => ['nullable', RulesFile::image()->min(10)->max(8192)],
    ]);

    // Update post order logic
    if ($request->post_order == 'top') {
        $max_post_order = Post::max('post_order');
        $post->post_order = $max_post_order + 1;
    } else {
        $min_post_order = Post::min('post_order');
        $post->post_order = $min_post_order - 1;
    }

    // Update the post
    $post->type = $request->type;
    $post->title = $request->title;
    $post->description = $request->description;
    $post->content = $request->content;
    if ($request->hasFile('photo')) {
        $photoPath = $request->file('photo')->store('', 'img');
        $post->photo = $photoPath;
    }
    $post->btn = $request->btn;
    $post->updated_at = Carbon::now();
    $post->save();

    return redirect()->route('team')->with('success', 'Publicación actualizada exitosamente');
}
```

### Adjusted Routes (`web.php`):

Ensure the routes are correctly pointing to the update method and use `PUT` for updates.

```php
Route::get('', [PostController::class, 'index'])->name('home');
Route::get('/equipo', [PostController::class, 'indexTeam'])->name('team');
Route::get('/post', [PostController::class, 'create'])->name('post.create');
Route::post('/post', [PostController::class, 'store'])->name('post.store');
Route::get('/post/{post}', [PostController::class, 'show'])->name('post.show');
Route::get('post/actualizar/{post}', [PostController::class, 'edit'])->name('post.edit');
Route::put('post/actualizar/{post}', [PostController::class, 'update'])->name('post.update');
Route::delete('post/eliminar/{post}', [PostController::class, 'destroy'])->name('post.destroy');
```

### Summary

These refinements should ensure that your view, controller, and routes are better aligned and